- Kurz-ISBNs werden angegeben 
- Infos jeder ISBN werden aus Access Datenbank gefetched
- XML file wird erstellt
- Wenn E-Book da ist mit E-Book speichern
- Wenn nicht, dann in einem anderen Ordner speichern (Ordner: E-Book, Kein E-Book)
- Ordner wird erstellt mit folgender Struktur: 
	- ISBN (Bezeichnung Ordner)
		- content (Bezeichnung Unterordner)
		- XML-File (Onyx-Meldung)


TODO:	
- Länge von ISBN in config festlegen
- lenIsbn.action: Textfeld zur Eingabe von ISBN länge 
-> Eigene Klasse, die getLength() implementiert.
-> getLength() returns Int 

public Int getLength() {
	return(isbnLen);
}

- UI for Database paths (modules.Panel -> setDbpaths())
- UI for ISBN Length
- action listener for confirm input button in setIsbnWin not working properly
- add component that shows the ISBNs selected in showIsbn in Panel.java
- In setTgPath() in Panel.java: tgSclt.getSelectedFile.getAbsolutePath in If Clause
  throws NullPointerException if the window is closed without a path being set
  Reference to FIX in line 312 in Panel.java
- implement/add the directory location functions in Config.java to the corresponding
  elements in Window.java and add UIs 
  -> see next TODO
- add setDbPaths() function to elements in devmenu in Window.java
- add a window, that appears after "Konvertieren"-button is clicked, that asks if all info is correct


IN PROGRESS (priority high to low):

->	- implement a way to connect to mc access databases
	- add params to makecfg for multiple infos to be written to the config file
	-> work on implementation (as in where, how to set the infos)
	-> make multiple config files, one for target path and one for all database paths
		-> set the database paths in an UI, and trash the dropdown dev menu, as this can be changed
		   to a UI

NOT IMPORTANT ATM:		   
	- check in Config.readCfg() function call, if "0" is returned -> see TODO in script
	  -> needs to be implemented, when the variable passed into the readCfg() function is a dynamic variable
	  -> for now, no action needs to be taken


DONE:
- add warning popup, see below TODO
- alert window for "no config file" in action listener for convBtn in Panel.java
- add params to 'makeCfg()' in Config.java -> see TODO at function
- changed target path config file to "target.json"
-> changed Config.readcfg() function; checks for needed info and returns value
   based on what info is needed
- config.txt -> config.json; so ist es einfacher mehrere
Konfigurationen vorzunehmen
- !! Change to maven project
- add a Book Class or Interface for easier processing of info
- dbPath in developer menu doesnt work, problem with "setvisible" in .show() Method
- Beim ersten Starten der Anwendung einen Config Ordner erstellen im Installationsverzeichnis des Programms
sodass zum Beispiel der Zeilordner in den Einstellungen des Programms festgelegt werden kann und nicht bei jedem
Ausführen des Programms erneut festgelegt werden muss
- So muss bei jedem Start der Anwendung nur das config-file mit den Einstellungen geladen werden und die Werte 
dementsprechend zur Laufzeit ausgelesen und zugewiesen werden können 




Für Book Class:

notwendige Felder:
- Buchtitel
- OnixThesisTypeCode
- OnixThesisPresentedTo
- OnixYearOfThesis
- mindestens ein Eintrag für Autor, Herausgeber o.a.
- mindestens ein Eintrag für Sprachen
- Produktform
- Warengruppe
- Erscheinungsdatum
- Preis


ONIX header:

<?xml version = ""1.0"" encoding = ""UTF-8""?>
<!DOCTYPE ONIXmessage SYSTEM ""https://www.editeur.org/onix/2.1/short/onix-international.dtd"">
<ONIXmessage  release=""2.1"">
<header>
	<m174>Verlag Dr. Kovac</m174>
	<m175>censored</m175>
	<m283>info@verlagdrkovac.de</m283>
	<m182>ONIX creation date</m182>
</header>